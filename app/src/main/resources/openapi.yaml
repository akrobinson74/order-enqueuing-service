openapi: 3.0.0
info:
  description: "Enumeration of the endpoints the OrderProcessingService exposes and the expected data transfer objects"
  title: "OrderProcessingService OpenAPI Spec"
  version: "1.0.0"
paths:
  /order:
    post:
      summary: "Create a new Order resource to be enqued for processing"
      operationId: postTestOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: CREATED.  Order resource was successfully created
          headers:
            Location:
              description: The URI of the created Order resource
              schema:
                type: string
        '400':
          description: INVALID EQUEST.  POST'd requestBody was not well formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '422':
          description: UNPROCESSABLE_ENTITY.  A field or fields in the requestBody contains an invalid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /health:
    get:
      summary: Health Check endpoint
      operationId: healthCheck
      responses:
        '200':
          description: Service is OK
        '503':
          description: Service is KO
  /metrics:
    get:
      summary: Endpoint for Prometheus metrics
      operationId: metrics
      responses:
        '200':
          description: Get prometheus metrics
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          description: Database id of the address
          example: 123467890
          format: int64
          type: integer
        city:
          description: City wherein address is located
          example: Berlin
          type: string
        country:
          description: Country where the given address is located
          example: Germany
          type: string
        latitude:
          description: Latitudinal coordinate of the address
          example: 52.431181
          type: number
        longitude:
          description: Longitudinal coordinate of the address
          example: 13.538744
          type: number
        street:
          description: Name of the street belonging to address
          example: Am Studio
          type: string
        streetNumber:
          description: House/Street number of the address
          example: 2a
          type: string
        zipCode:
          description: Postal code of the address
          example: 12489
          format: int32
          type: integer
      required:
        - city
        - country
        - street
        - streetNumber
        - zipCode

    Contact:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        email:
          description: Email address of the contact
          example: michael.mente@phizzard.com
        firstName:
          description: First name of the contact
          example: Michael
          type: string
        lastName:
          description: Last name of the contact
          example: Mente
          type: string
        phoneNumber:
          description: Phone number at which to reach the contact
          example: '+49123456789910'
          type: string
      required:
        - address
        - email
        - firstName
        - lastName
        - phoneNumber

    ErrorBody:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string

    Order:
      type: object
      properties:
        id:
          description: Database id of the product
          example: 123467890
          format: int64
          type: integer
        approvalCode:
          type: string
          example: "I really approve of you"
        buyerContact:
          $ref: '#/components/schemas/Contact'
        deliveryContact:
          $ref: '#/components/schemas/Contact'
        invoiceContact:
          $ref: '#/components/schemas/Contact'
        orderItems:
          items:
            $ref: '#/components/schemas/OrderItem'
          type: array
        status:
          type: string
          enum: [PROCESSING, CANCELED, COMPLETED]
        transactionDate:
          type: string
          format: ISO Date
          example: "2019-05-02T08:05:23.653Z"
      required:
        - buyerContact
        - orderItems
        - status

    OrderItem:
      type: object
      properties:
        articleDescription:
          description: Description of the article in question
          example: "Ladies Kjus T-shirt"
          type: string
        currency:
          description: ISO currency code for currency used in the purchase of this item
          example: "CHF"
          type: string
        grossPrice:
          example: 64.07
          type: number
          format: double
        gtin:
          description: A unique identifier for this product
          type: string
          example: "07612997688944"
        netPrice:
          example: 69.0
          type: number
          format: double
        quantity:
          description: The amount of the particular productVariant ordered
          example: 2
          format: int32
          type: integer
        shop:
          $ref: '#/components/schemas/Shop'
        supplierName:
          description: The manufacturer and/or vendor of this product; used to split and group orderItems together
          example: kjus
          type: string
      required:
        - articleDescription
        - currency
        - gtin
        - grossPrice
        - quantity
        - supplierName

    Shop:
      type: object
      properties:
        identifier:
          description: text to identify the shop that was the source of the item value can be GLN, number or an address - the value becomes a string literal
          example: "200742"
          type: string
        name:
          description: the name of the shop from which the item is sourced
          example: "Pais"
          type: string
