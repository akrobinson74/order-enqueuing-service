definitions:
  services:
#    elasticmq:
#      image: elasticmq:0.14.6
    gradle:
      image: gradle:4.10.2-jdk8
#    mongo:
#      image: mongo:4.0.9
    ubuntu:
      image: ubuntu:18.04

pipelines:
  branches:
    stage:
      - parallel:
        - step:
            name: Code Quality Check
            services:
              - gradle
            script:
              - ./gradlew ktlintCheck
              - ./gradlew detekt
        - step:
            name: Code Compilation
            services:
              - gradle
            caches:
              - gradle
            script:
              - ./gradlew :app:compileTestKotlin
              - ./gradlew :integration-test:compileTestKotlin
      - parallel:
        - step:
            name: Run Unit Tests
            services:
              - gradle
            caches:
              - gradle
            script:
              - ./gradlew :app:test
        - step:
            name: Run Integration Tests
            services:
              - gradle
            caches:
              - gradle
            script:
              - ./gradlew :integration-test:test
      - step:
          name: Check Code Coverage
          services:
            - gradle
          caches:
            - gradle
          script:
            - ./gradlew jacocoRootTestReport
      - step:
          name: Build fatjar
          services:
            - gradle
          caches:
            - gradle
          script:
            - ./gradlew :app:shadowJar
      - step:
          name: Build Docker Image
          caches:
            - gradle
          services:
            - docker
            - ubuntu
          script:
            - export APP_ENV=stage
            - apt-get -y update && apt-get -y install build-essential curl gnupg python2.7 python-pip sudo
            - pip install --upgrade setuptools
            - pip install awscli
            - make release VERSION=${BITBUCKET_COMMIT:0:7}
      - step:
          name: Deploy
          services:
            - docker
            - ubuntu
          deployment: staging
          trigger: manual
          script:
            - export APP_ENV=stage
            - apt-get update && apt-get install -y curl unzip python-pip build-essential
            - pip install --upgrade setuptools
            - pip install awscli
            - curl https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip > /tmp/terraform_0.11.7_linux_amd64.zip && unzip /tmp/terraform_0.11.7_linux_amd64.zip -d /bin
            - make rollout-staging VERSION=${BITBUCKET_COMMIT:0:7}