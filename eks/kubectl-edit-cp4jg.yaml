# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
# deployments.apps "alb-ingress-controller" was not valid:
# * : Invalid value: "The edited file failed validation": [yaml: line 40: found a tab character that violates indentation, invalid character 'a' looking for beginning of value]
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"alb-ingress-controller"},"name":"alb-ingress-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"alb-ingress-controller"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"alb-ingress-controller"}},"spec":{"containers":[{"args":["--watch-namespace=default","--ingress-class=alb","--cluster-name=dev","--aws-region=eu-central-1","--aws-api-debug"],"env":[{"name":"AWS_ACCESS_KEY_ID","value":"AKIAJ3KDNXMVJAWHXBRA"},{"name":"AWS_SECRET_ACCESS_KEY","value":"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"}],"image":"894847497797.dkr.ecr.us-west-2.amazonaws.com/aws-alb-ingress-controller:v1.0.0","imagePullPolicy":"Always","name":"server","resources":{},"terminationMessagePath":"/dev/termination-log"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","securityContext":{},"serviceAccount":"alb-ingress","serviceAccountName":"alb-ingress","terminationGracePeriodSeconds":30}}}}
  creationTimestamp: "2019-10-08T02:08:27Z"
  generation: 3
  labels:
    app: alb-ingress-controller
  name: alb-ingress-controller
  namespace: kube-system
  resourceVersion: "279709"
  selfLink: /apis/apps/v1/namespaces/kube-system/deployments/alb-ingress-controller
  uid: 841683d2-e970-11e9-b5b8-063f44fa3e76
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alb-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: alb-ingress-controller
    spec:
      containers:
      - args:
        - --watch-namespace=default
        - --ingress-class=alb
        - --cluster-name=dev
	- --aws-vpc-id=vpc-0272cacc5a6070a53
        - --aws-region=eu-central-1
        - --aws-api-debug
        env:
        - name: AWS_ACCESS_KEY_ID
          value: AKIAJ3KDNXMVJAWHXBRA
        - name: AWS_SECRET_ACCESS_KEY
          value: 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
        image: 894847497797.dkr.ecr.us-west-2.amazonaws.com/aws-alb-ingress-controller:v1.0.0
        imagePullPolicy: Always
        name: server
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: alb-ingress
      serviceAccountName: alb-ingress
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-10-08T02:08:27Z"
    lastUpdateTime: "2019-10-08T02:08:27Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2019-10-08T02:08:27Z"
    lastUpdateTime: "2019-10-08T08:55:45Z"
    message: ReplicaSet "alb-ingress-controller-77d4546b9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
